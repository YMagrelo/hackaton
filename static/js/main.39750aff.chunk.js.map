{"version":3,"sources":["components/AddContent/AddNode/NoteList.js","components/AddContent/AddNode/AddNote.js","components/TaskList/TaskList.js","components/TaskList/AddTodo.js","components/Calendar/Calendar.js","App.js","index.js"],"names":["NoteList","noteList","map","note","className","title","text","dateNote","substring","AddNote","props","handleInputChange","value","target","setState","handleTextareaChange","handleSubmit","event","preventDefault","state","addNote","this","onSubmit","placeholder","onChange","type","disabled","trim","Component","TaskList","todos","todo","key","taskId","taskTitle","taskDescription","dataTodo","day","AddTodo","handleSubmitForm","addTodo","handleInputTitleChange","handleInputDescriptionChange","handleCanselButton","onClick","length","handleEdit","Calendar","today","moment","format","dateContext","showMonthPopup","isTaskCreator","weekdays","weekdaysShort","months","loadTaskCreator","year","month","daysInMonth","currentDate","get","currentDay","firstDayOfMonth","firstDay","startOf","setMonth","monthNow","indexOf","Object","assign","set","nextMonth","add","onNextMonth","prevMonth","subtract","onPrevMonth","onSelectChange","evt","data","onMonthChange","SelectList","popup","onChangeMonth","MonthNav","showYearEditor","showYearNav","setYear","onYearChange","onKeyUpYear","keyCode","YearNav","defaultValue","ref","yearInput","onKeyUp","onDoubleClick","onDayClick","prevState","blanks","i","push","d","totalSlots","rows","cells","forEach","row","insertRow","slice","trElems","style","colSpan","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39750aff.chunk.js","sourcesContent":["/* eslint-disable dot-notation */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const NoteList = ({ noteList }) => (\n  <>\n    {noteList.map(note => (\n      <div className=\"add-note__note note\">\n        <h2 className=\"note__heading\">{note.title}</h2>\n        <p className=\"note__text\">{note.text}</p>\n        <span>{`${note.dateNote['_d']}`.substring(0, 15)}</span>\n      </div>\n    ))}\n  </>\n);\n\nNoteList.propTypes = {\n  noteList: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      text: PropTypes.string,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { NoteList } from './NoteList';\nimport './AddNote.css';\n\nexport class AddNote extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: '',\n      text: '',\n    };\n  }\n\n  handleInputChange = ({ target }) => {\n    const { value } = target;\n\n    this.setState({\n      title: value,\n    });\n  }\n\n  handleTextareaChange = ({ target }) => {\n    const { value } = target;\n\n    this.setState({\n      text: value,\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { title, text } = this.state;\n\n    this.props.addNote({\n      title,\n      text,\n    });\n\n    this.setState({\n      title: '',\n      text: '',\n    });\n  }\n\n  render() {\n    const { title, text } = this.state;\n    const { noteList } = this.props;\n\n    return (\n      <div className=\"add-note\">\n        <h1 className=\"add-note__heading\">Note List</h1>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            placeholder=\"Write a title here...\"\n            className=\"add-note__input--title\"\n            value={title}\n            onChange={this.handleInputChange}\n          />\n          <textarea\n            placeholder=\"Write your note here...\"\n            className=\"add-note__input--text\"\n            value={text}\n            onChange={this.handleTextareaChange}\n          />\n          <button\n            className=\"add-note__button--add\"\n            type=\"submit\"\n            disabled={!title.trim()}\n          >\n          Add Note\n          </button>\n        </form>\n        <NoteList\n          noteList={noteList}\n        />\n      </div>\n    );\n  }\n}\n\nAddNote.propTypes = {\n  noteList: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      text: PropTypes.string,\n    }).isRequired,\n  ).isRequired,\n  addNote: PropTypes.func.isRequired,\n};\n","/* eslint-disable dot-notation */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './TaskList.css';\n\nexport const TaskList = ({ todos }) => (\n  <table className=\"table table-bordered\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>Title</th>\n        <th>Text</th>\n      </tr>\n    </thead>\n    <tbody>\n      {todos.map(todo => (\n        <tr key={todo.taskId}>\n          <th>{todo.taskId}</th>\n          <th>{todo.taskTitle}</th>\n          <th>{todo.taskDescription}</th>\n          <th>\n            {`${todo.dataTodo['_d']}`.substring(0, 4)}\n            {todo.day}\n            {`${todo.dataTodo['_d']}`.substring(10, 15)}\n          </th>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\nTaskList.propTypes = {\n  todos: PropTypes.arrayOf().isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TaskList } from './TaskList';\n\nexport class AddTodo extends Component {\n  state = {\n    taskId: 1,\n    taskTitle: '',\n    taskDescription: '',\n  }\n\n  handleSubmitForm = (event) => {\n    event.preventDefault();\n    const { taskTitle, taskId, taskDescription } = this.state;\n\n    if (taskTitle) {\n      this.addTodo({\n        taskId,\n        taskTitle,\n        taskDescription,\n      });\n    }\n  }\n\n  handleInputTitleChange = ({ target: { value } }) => {\n    this.setState({\n      taskTitle: value,\n    });\n  }\n\n  handleInputDescriptionChange = ({ target: { value } }) => {\n    this.setState({\n      taskDescription: value,\n    });\n  }\n\n  handleSubmitForm = (event) => {\n    event.preventDefault();\n    const { taskTitle, taskId, taskDescription } = this.state;\n\n    this.props.addTodo({\n      taskId,\n      taskTitle,\n      taskDescription,\n    });\n    this.setState({\n      taskId: taskId + 1,\n      taskTitle: '',\n      taskDescription: '',\n    });\n  }\n\n  handleCanselButton = () => {\n    this.setState({\n      taskTitle: '',\n      taskDescription: '',\n    });\n  }\n\n  render() {\n    const { taskTitle, taskDescription } = this.state;\n    const { todos } = this.props;\n\n    return (\n      <form\n        onSubmit={this.handleSubmitForm}\n      >\n        <label>\n          <input\n            type=\"text\"\n            className=\"todo-title\"\n            onChange={this.handleInputTitleChange}\n            value={taskTitle}\n            placeholder=\"Write a task here\"\n          />\n        </label>\n        <label>\n          <textarea\n            type=\"text\"\n            className=\"todo-text\"\n            onChange={this.handleInputDescriptionChange}\n            value={taskDescription}\n            placeholder=\"Write a description\"\n          />\n        </label>\n        <div className=\"button-container\">\n          <button\n            className=\"button-save\"\n            disabled={!taskTitle.trim()}\n            type=\"submit\"\n          >\n          Save\n          </button>\n          <button\n            className=\"button-cancel\"\n            type=\"button\"\n            onClick={this.handleCanselButton}\n          >\n          Cansel\n          </button>\n        </div>\n        {(todos.length !== 0)\n          && (\n            <TaskList\n              todos={todos}\n              handleEdit={this.handleEdit}\n            />\n          )}\n      </form>\n    );\n  }\n}\nAddTodo.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      taskId: PropTypes.any,\n      taskTitle: PropTypes.string,\n    }).isRequired,\n  ).isRequired,\n  addTodo: PropTypes.func.isRequired,\n};\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/jsx-curly-brace-presence */\n/* eslint-disable no-plusplus */\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport './Calendar.css';\nimport { AddNote } from '../AddContent/AddNode/AddNote';\nimport { AddTodo } from '../TaskList/AddTodo';\n\nexport class Calendar extends Component {\n  state = {\n    noteList: [],\n    todos: [],\n    today: moment().format('D'),\n    dateContext: moment(),\n    showMonthPopup: false,\n    isTaskCreator: false,\n  }\n\n  weekdays = moment.weekdays();\n\n  weekdaysShort = ['Mon', 'Thu', 'Wed', 'Tue', 'Fri', 'Sat', 'Sun'];\n\n  months = moment.months();\n\n  loadTaskCreator = () => {\n    this.setState({\n      isTaskCreator: true,\n    });\n  }\n\n  year = () => this.state.dateContext.format('Y');\n\n  month = () => this.state.dateContext.format('MMMM');\n\n  daysInMonth = () => this.state.dateContext.daysInMonth();\n\n  currentDate = () => this.state.dateContext.get('date');\n\n  currentDay = () => this.state.dateContext.format('D');\n\n  firstDayOfMonth = () => {\n    const { dateContext } = this.state;\n    let firstDay = moment(dateContext).startOf('month').format('d');\n\n    if (!firstDay) {\n      firstDay = 6;\n    } else {\n      firstDay -= 1;\n    }\n\n    return firstDay;\n  }\n\n  setMonth = (month) => {\n    const monthNow = this.months.indexOf(month);\n    // eslint-disable-next-line react/no-access-state-in-setstate\n    let dateContext = Object.assign({}, this.state.dateContext);\n\n    dateContext = moment(dateContext).set('month', monthNow);\n    this.setState({\n      dateContext,\n    });\n  }\n\n  nextMonth = () => {\n    // eslint-disable-next-line react/no-access-state-in-setstate\n    let dateContext = Object.assign({}, this.state.dateContext);\n\n    dateContext = moment(dateContext).add(1, 'month');\n    this.setState({\n      dateContext,\n    });\n    // eslint-disable-next-line react/prop-types\n    this.props.onNextMonth && this.props.onNextMonth();\n  }\n\n  prevMonth = () => {\n    // eslint-disable-next-line react/no-access-state-in-setstate\n    let dateContext = Object.assign({}, this.state.dateContext);\n\n    dateContext = moment(dateContext).subtract(1, 'month');\n    this.setState({\n      dateContext,\n    });\n    // eslint-disable-next-line react/prop-types\n    this.props.onPrevMonth && this.props.onPrevMonth();\n  }\n\n  onSelectChange = (evt, data) => {\n    this.setMonth(data);\n    // eslint-disable-next-line react/prop-types\n    this.props.onMonthChange && this.props.onMonthChange();\n  }\n\n  SelectList = (props) => {\n    const popup = props.data.map(data => (\n      <div key={data}>\n        <button\n          className=\"option-month\"\n          type=\"button\"\n          onClick={evt => this.onSelectChange(evt, data)}\n        >\n          {data}\n        </button>\n      </div>\n    ));\n\n    return (\n      <div className=\"month-popup\">\n        {popup}\n      </div>\n    );\n  }\n\n  onChangeMonth = (evt, month) => {\n    this.setState({\n      // eslint-disable-next-line react/no-access-state-in-setstate\n      showMonthPopup: !this.state.showMonthPopup,\n    });\n  }\n\n  MonthNav = () => (\n    <button\n      type=\"button\"\n      className=\"button-month\"\n      onClick={(evt) => {\n        this.onChangeMonth(evt, this.month());\n      }}\n    >\n      {this.month()}\n      {this.state.showMonthPopup\n      && <this.SelectList data={this.months} />\n      }\n    </button>\n  )\n\n  showYearEditor = () => {\n    this.setState({\n      showYearNav: true,\n    });\n  }\n\n  setYear = (year) => {\n    // eslint-disable-next-line react/no-access-state-in-setstate\n    let dateContext = Object.assign({}, this.state.dateContext);\n\n    dateContext = moment(dateContext).set('year', year);\n    this.setState({\n      dateContext,\n    });\n  }\n\n  onYearChange = (evt) => {\n    this.setYear(evt.target.value);\n    // eslint-disable-next-line react/prop-types\n    this.props.onYearChange && this.props.onYearChange(evt, evt.target.value);\n  }\n\n  onKeyUpYear = (evt) => {\n    if (evt.keyCode === 13 || evt.keyCode === 27) {\n      this.setYear(evt.target.value);\n      this.setState({\n        showYearNav: false,\n      });\n    }\n  }\n\n  YearNav = () => (\n    this.state.showYearNav\n      ? (\n        <input\n          defaultValue={this.year()}\n          className=\"editor-year\"\n          ref={yearInput => (this.yearInput = yearInput)}\n          onKeyUp={evt => this.onKeyUpYear(evt)}\n          onChange={evt => this.onYearChange(evt)}\n          type=\"number\"\n          placeholder=\"year\"\n        />\n      )\n      : (\n        <button\n          type=\"button\"\n          className=\"button-year\"\n          onDoubleClick={() => (this.showYearEditor())}\n        >\n          {this.year()}\n        </button>\n      )\n  )\n\n  onDayClick = (evt, day) => {\n    // eslint-disable-next-line react/prop-types\n    // this.props.onDayClick && this.props.onDayClick(evt, day);\n    this.setState({\n      today: day,\n    });\n  }\n\n  addNote = (note) => {\n    this.setState(prevState => ({\n      noteList: [...prevState.noteList, {\n        ...note,\n        dateNote: prevState.dateContext,\n      }],\n    }));\n  };\n\n  addTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos, {\n        ...todo,\n        dataTodo: prevState.dateContext,\n        day: prevState.today,\n      }],\n    }));\n  }\n\n  render() {\n    const weekdays = this.weekdaysShort.map(day => (\n      <td key={day} className=\"week-day\">{day}</td>\n    ));\n    const { todos } = this.state;\n    const blanks = [];\n\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\n      blanks.push(<td key={i * 80} className=\"emptySlot\">{''}</td>);\n    }\n\n    const daysInMonth = [];\n\n    for (let d = 1; d <= this.daysInMonth(); d++) {\n      const className = (d === this.currentDay() ? 'day current-day' : 'day');\n\n      daysInMonth.push(\n        <td key={d} className={className}>\n          <span\n            onClick={evt => (this.onDayClick(evt, d))}\n          >\n            {d}\n          </span>\n        </td>,\n      );\n    }\n\n    const totalSlots = [...blanks, ...daysInMonth];\n    const rows = [];\n    let cells = [];\n\n    totalSlots.forEach((row, i) => {\n      if ((i % 7) !== 0) {\n        cells.push(row);\n      } else {\n        const insertRow = cells.slice();\n\n        rows.push(insertRow);\n        cells = [];\n        cells.push(row);\n      }\n\n      if (i === totalSlots.length - 1) {\n        const insertRow = cells.slice();\n\n        rows.push(insertRow);\n      }\n    });\n    const trElems = rows.map((d, i) => (\n      <tr key={i * 100}>\n        {d}\n      </tr>\n    ));\n\n    return (\n      <div className=\"calendar-container\" style={this.style}>\n        <table className=\"calendar\">\n          <thead>\n            <tr className=\"calendar-header\">\n              <td colSpan=\"5\">\n                <this.MonthNav />\n                {' '}\n                <this.YearNav />\n              </td>\n              <td colSpan=\"2\" className=\"nav-month\">\n                <button\n                  type=\"button\"\n                  className=\"button-prev\"\n                  onClick={() => this.prevMonth()}\n                />\n                <button\n                  type=\"button\"\n                  className=\"button-next\"\n                  onClick={() => this.nextMonth()}\n                />\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              {weekdays}\n            </tr>\n            {trElems}\n          </tbody>\n        </table>\n        <div>\n          <AddNote\n            noteList={this.state.noteList}\n            addNote={this.addNote}\n          />\n          {\n            this.state.isTaskCreator\n              ? (\n                <AddTodo todos={todos} addTodo={this.addTodo} />\n              )\n              : (\n                <button\n                  className=\"button button__task-creator\"\n                  type=\"button\"\n                  onClick={this.loadTaskCreator}\n                >\n                Add task\n                </button>\n              )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Calendar } from './components/Calendar/Calendar';\nimport './App.css';\n\nexport class App extends Component {\n  state= {\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Calendar />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}